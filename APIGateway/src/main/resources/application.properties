# Server port
server.port=8084

# Application name
spring.application.name=api-gateway

# MySQL datasource config (optional, only if needed)
spring.datasource.url=jdbc:mysql://localhost:3306/microservice1
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# Eureka client config
eureka.instance.prefer-ip-address=true
eureka.client.fetch-registry=true
eureka.client.register-with-eureka=true
eureka.client.service-url.defaultZone=http://localhost:8761/eureka

# âœ… Spring Cloud Gateway routes
spring.cloud.gateway.routes[0].id=USER-SERVICE
spring.cloud.gateway.routes[0].uri=lb://USER-SERVICE
spring.cloud.gateway.routes[0].predicates[0]=Path=/users/**

spring.cloud.gateway.routes[1].id=HOTEL-SERVICE
spring.cloud.gateway.routes[1].uri=lb://HOTEL-SERVICE
spring.cloud.gateway.routes[1].predicates[0]=Path=/hotels/**

spring.cloud.gateway.routes[2].id=HOTEL-SERVICE-STAFFS
spring.cloud.gateway.routes[2].uri=lb://HOTEL-SERVICE
spring.cloud.gateway.routes[2].predicates[0]=Path=/staffs/**

spring.cloud.gateway.routes[3].id=RATING-SERVICE
spring.cloud.gateway.routes[3].uri=lb://RATING-SERVICE
spring.cloud.gateway.routes[3].predicates[0]=Path=/ratings/**

# Okta OAuth2 config
okta.oauth2.issuer=https://dev-77584981.okta.com/oauth2/default
okta.oauth2.audience=api://default
okta.oauth2.client-id=0oa7w65a24Px9Oyms5d7
okta.oauth2.client-secret=JfsTTqODW21uapbbhKjW42sGzjcNs86GN7WL5dfU
okta.oauth2.scopes=openid, profile, email, offline_access
